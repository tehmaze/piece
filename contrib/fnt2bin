#!/usr/bin/env python

import binascii


def decode_fnt(fd):
    # Parse uuencode header
    while True:
        header = fd.readline()
        if not header:
            raise ValueError('No begin line found in fnt')
        if header.startswith('begin'):
            fields = header.split(' ', 2)
            if len(fields) == 3 and fields[0] == 'begin':
                break

    # Parse data chunks
    line = fd.readline()
    while line and line.strip() != 'end':
        try:
            yield binascii.a2b_uu(line)
        except binascii.Error, v:
            # Workaround for broken uuencoders by /Fredrik Lundh
            size = (((ord(line[0]) - 32) & 63) * 4 + 5) // 3
            yield binascii.a2b_uu(line[:size])
        line = fd.readline()


def run():
    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument('-o', '--output', required=True)
    parser.add_argument('filename')

    option = parser.parse_args()

    with open(option.filename, 'r') as src:
        with open(option.output, 'wb') as dst:
            for chunk in decode_fnt(src):
                dst.write(chunk)


if __name__ == '__main__':
    import sys
    sys.exit(run())
